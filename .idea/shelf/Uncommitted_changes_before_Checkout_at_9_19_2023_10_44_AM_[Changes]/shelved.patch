Index: converter.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import networkx as nx\r\nimport csv\r\n\r\ndef convertToGraph(filepath):\r\n    net = nx.MultiDiGraph()\r\n    with open(filepath, newline='') as csvfile:\r\n        csvreader = csv.reader(csvfile, delimiter=',')\r\n        for row in csvreader:\r\n            if row[6] != \"Forbidden\":\r\n                net.add_edge(int(row[2]), int(row[3]), float(row[4]), wkt=row[11], type=row[6])\r\n            if row[7] != \"Forbidden\":\r\n                net.add_edge(int(row[3]), int(row[2]), float(row[4]), wkt=row[11], type=row[7])\r\n    return net\r\n\r\nnet = convertToGraph(\"data\\\\edgesNoKey.csv\")\r\n# print([i for i in net.neighbors(49724252)])
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/converter.py b/converter.py
--- a/converter.py	(revision b2ab072367a3e6af3e75383611fddd128bbfdc76)
+++ b/converter.py	(date 1695145239713)
@@ -7,7 +7,7 @@
         csvreader = csv.reader(csvfile, delimiter=',')
         for row in csvreader:
             if row[6] != "Forbidden":
-                net.add_edge(int(row[2]), int(row[3]), float(row[4]), wkt=row[11], type=row[6])
+                net.add_edge(int(row[2]), iasDnt(row[3]), float(row[4]), wkt=row[11], type=row[6])
             if row[7] != "Forbidden":
                 net.add_edge(int(row[3]), int(row[2]), float(row[4]), wkt=row[11], type=row[7])
     return net
